{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clusterLocation": {
            "type": "String",
            "metadata": {
                "description": "Location of the Cluster"
            }
        },
        "clusterName": {
            "type": "String",
            "metadata": {
                "description": "Name of your cluster - Between 3 and 23 characters. Letters and numbers only"
            }
        },
        "adminUserName": {
            "type": "String",
            "metadata": {
                "description": "Remote desktop user Id"
            }
        },
        "durabilityLevel": {
            "type": "String",
            "metadata": {
                "description": "The durability level"
            }
        },
        "reliabilityLevel": {
            "type": "String",
            "metadata": {
                "description": "The reliability level"
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "Remote desktop user password. Must be a strong password"
            }
        },
        "vmImagePublisher": {
            "defaultValue": "MicrosoftWindowsServer",
            "type": "String",
            "metadata": {
                "description": "VM image Publisher"
            }
        },
        "vmImageOffer": {
            "defaultValue": "WindowsServer",
            "type": "String",
            "metadata": {
                "description": "VM image offer"
            }
        },
        "vmImageSku": {
            "type": "String",
            "metadata": {
                "description": "VM image SKU"
            }
        },
        "vmSku": {
            "type": "String",
            "metadata": {
                "description": "VM SKU"
            }
        },
        "vmImageVersion": {
            "defaultValue": "latest",
            "type": "String",
            "metadata": {
                "description": "VM image version"
            }
        },
        "clusterProtectionLevel": {
            "defaultValue": "EncryptAndSign",
            "allowedValues": [
                "None",
                "Sign",
                "EncryptAndSign"
            ],
            "type": "String",
            "metadata": {
                "description": "Protection level.Three values are allowed - EncryptAndSign, Sign, None. It is best to keep the default of EncryptAndSign, unless you have a need not to"
            }
        },
        "certificateStoreValue": {
            "defaultValue": "My",
            "allowedValues": [
                "My"
            ],
            "type": "String",
            "metadata": {
                "description": "The store name where the cert will be deployed in the virtual machine"
            }
        },
        "certificateThumbprint": {
            "type": "String",
            "metadata": {
                "description": "Certificate Thumbprint"
            }
        },
        "sourceVaultValue": {
            "type": "String",
            "metadata": {
                "description": "Resource Id of the key vault, is should be in the format of /subscriptions/<Sub ID>/resourceGroups/<Resource group name>/providers/Microsoft.KeyVault/vaults/<vault name>"
            }
        },
        "certificateUrlValue": {
            "type": "String",
            "metadata": {
                "description": "Refers to the location URL in your key vault where the certificate was uploaded, it is should be in the format of https://<name of the vault>.vault.azure.net:443/secrets/<exact location>"
            }
        },
        "keyVaultName": {
            "type": "String",
            "metadata": {
                "description": "Name of the key vault"
            }
        },
        "storageAccountType": {
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS"
            ],
            "type": "String",
            "metadata": {
                "description": "Replication option for the VM image storage account"
            }
        },
        "supportLogStorageAccountType": {
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS"
            ],
            "type": "String",
            "metadata": {
                "description": "Replication option for the support log storage account"
            }
        },
        "applicationDiagnosticsStorageAccountType": {
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS"
            ],
            "type": "String",
            "metadata": {
                "description": "Replication option for the application diagnostics storage account"
            }
        },
        "nt0InstanceCount": {
            "type": "Int",
            "metadata": {
                "description": "Instance count for node type"
            }
        },
        "sfReverseProxyPort": {
            "type": "Int",
            "metadata": {
                "description": "Endpoint for Service Fabric reverse proxy"
            }
        },
        "svcFabData": {
            "defaultValue": "D:\\SvcFab",
            "type": "String",
            "metadata": {
                "description": "Service Fabric Data path"
            }
        },
        "svcFabLogs": {
            "defaultValue": "D:\\SvcFab\\Log",
            "type": "String",
            "metadata": {
                "description": "Service Fabric logs path"
            }
        },
        "svcFabRuntime": {
            "defaultValue": "C:\\Program Files\\Microsoft Service Fabric",
            "type": "String",
            "metadata": {
                "description": "Service Fabric runtime path"
            }
        }
    },
    "variables": {
        "computeLocation": "[parameters('clusterLocation')]",
        "dnsName": "[parameters('clusterName')]",
        "vmStorageAccountName": "[toLower(concat( 'sflogs', uniqueString(resourceGroup().id), '1' ))]",
        "publicIPAddressName": "PublicIP-VM",
        "publicIPAddressType": "Dynamic",
        "vmStorageAccountContainerName": "vhds",
        "virtualNetworkName": "VNet",
        "addressPrefix": "10.0.0.0/16",
        "nicName": "NIC",
        "lbName": "LoadBalancer",
        "lbIPName": "[concat('PublicIP-', parameters('clusterName'))]",
        "availSetName": "AvailabilitySet",
        "maxPercentUpgradeDomainDeltaUnhealthyNodes": "100",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "overProvision": "false",
        "vmssApiVersion": "2017-03-30",
        "sfrpApiVersion": "2017-07-01-preview",
        "lbApiVersion": "2015-06-15",
        "vNetApiVersion": "2015-06-15",
        "storageApiVersion": "2016-01-01",
        "publicIPApiVersion": "2015-06-15",
        "nt0applicationStartPort": "20000",
        "nt0applicationEndPort": "30000",
        "nt0ephemeralStartPort": "49152",
        "nt0ephemeralEndPort": "65534",
        "nt0fabricTcpGatewayPort": "19000",
        "nt0fabricHttpGatewayPort": "19080",
        "subnet0Name": "Subnet-0",
        "subnet0Prefix": "10.0.0.0/24",
        "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet0Name'))]",
        "supportLogStorageAccountName": "[toLower( concat( uniqueString(resourceGroup().id),'2'))]",
        "applicationDiagnosticsStorageAccountName": "[toLower(concat('wad',uniqueString(resourceGroup().id), '3' ))]",
        "lbID0": "[resourceId('Microsoft.Network/loadBalancers',concat('LB','-', parameters('clusterName'),'-',variables('vmNodeType0Name')))]",
        "lbIPConfig0": "[concat(variables('lbID0'),'/frontendIPConfigurations/LoadBalancerIPConfig')]",
        "lbPoolID0": "[concat(variables('lbID0'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
        "lbProbeID0": "[concat(variables('lbID0'),'/probes/FabricGatewayProbe')]",
        "lbHttpProbeID0": "[concat(variables('lbID0'),'/probes/FabricHttpGatewayProbe')]",
        "lbNatPoolID0": "[concat(variables('lbID0'),'/inboundNatPools/LoadBalancerBEAddressNatPool')]",
        "vmNodeType0Name": "[toLower(substring(uniqueString(parameters('clusterName')), 0, 9))]",
        "vmNodeType0Size": "[parameters('vmSku')]",
        "vmStorageAccountName0": "[toLower(concat(uniqueString(resourceGroup().id), '1', '0' ))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[variables('storageApiVersion')]",
            "name": "[variables('supportLogStorageAccountName')]",
            "location": "[variables('computeLocation')]",
            "dependsOn": [],
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            },
            "sku": {
                "name": "[parameters('supportLogStorageAccountType')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[variables('storageApiVersion')]",
            "name": "[variables('applicationDiagnosticsStorageAccountName')]",
            "location": "[variables('computeLocation')]",
            "dependsOn": [],
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            },
            "sku": {
                "name": "[parameters('applicationDiagnosticsStorageAccountType')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "[variables('vNetApiVersion')]",
            "name": "[variables('virtualNetworkName')]",
            "location": "[variables('computeLocation')]",
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet0Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet0Prefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "[variables('publicIPApiVersion')]",
            "name": "[concat(variables('lbIPName'),'-','0')]",
            "location": "[variables('computeLocation')]",
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            },
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsName')]"
                },
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "[variables('lbApiVersion')]",
            "name": "[concat('LB','-', parameters('clusterName'),'-',variables('vmNodeType0Name'))]",
            "location": "[variables('computeLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',concat(variables('lbIPName'),'-','0'))]"
            ],
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerIPConfig",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('lbIPName'),'-','0'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "LoadBalancerBEAddressPool",
                        "properties": {}
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRule",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": "[variables('nt0fabricTcpGatewayPort')]",
                            "enableFloatingIP": "false",
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": "[variables('nt0fabricTcpGatewayPort')]",
                            "idleTimeoutInMinutes": "5",
                            "probe": {
                                "id": "[variables('lbProbeID0')]"
                            },
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "LBHttpRule",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": "[variables('nt0fabricHttpGatewayPort')]",
                            "enableFloatingIP": "false",
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": "[variables('nt0fabricHttpGatewayPort')]",
                            "idleTimeoutInMinutes": "5",
                            "probe": {
                                "id": "[variables('lbHttpProbeID0')]"
                            },
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "AppPortLBRule0",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": "80",
                            "enableFloatingIP": "false",
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": "80",
                            "idleTimeoutInMinutes": "5",
                            "probe": {
                                "id": "[concat(variables('lbID0'), '/probes/AppPortProbe0')]"
                            },
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "AppPortLBRule1",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": "83",
                            "enableFloatingIP": "false",
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": "83",
                            "idleTimeoutInMinutes": "5",
                            "probe": {
                                "id": "[concat(variables('lbID0'), '/probes/AppPortProbe1')]"
                            },
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "AppPortLBRule2",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID0')]"
                            },
                            "backendPort": "443",
                            "enableFloatingIP": "false",
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPort": "443",
                            "idleTimeoutInMinutes": "5",
                            "probe": {
                                "id": "[concat(variables('lbID0'), '/probes/AppPortProbe2')]"
                            },
                            "protocol": "tcp"
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "FabricGatewayProbe",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": "[variables('nt0fabricTcpGatewayPort')]",
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "FabricHttpGatewayProbe",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": "[variables('nt0fabricHttpGatewayPort')]",
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "AppPortProbe0",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": "80",
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "AppPortProbe1",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": "83",
                            "protocol": "tcp"
                        }
                    },
                    {
                        "name": "AppPortProbe2",
                        "properties": {
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2,
                            "port": "443",
                            "protocol": "tcp"
                        }
                    }
                ],
                "inboundNatPools": [
                    {
                        "name": "LoadBalancerBEAddressNatPool",
                        "properties": {
                            "backendPort": "3389",
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPortRangeEnd": "4500",
                            "frontendPortRangeStart": "3389",
                            "protocol": "tcp"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2015-06-15",
            "name": "[concat('nsg','-', parameters('clusterName'),'-',variables('subnet0Name'))]",
            "location": "[resourceGroup().location]",
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "allowSvcFabSMB",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "445",
                            "direction": "Inbound",
                            "priority": 3950,
                            "protocol": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow SMB traffic within the net, used by fabric to move packages around"
                    },
                    {
                        "name": "allowSvcFabCluser",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "1025-1027",
                            "direction": "Inbound",
                            "priority": 3920,
                            "protocol": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow ports within vnet that are used by the fabric to talk between nodes"
                    },
                    {
                        "name": "allowSvcFabEphemeral",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[concat(variables('nt0ephemeralStartPort'), '-', variables('nt0ephemeralEndPort'))]",
                            "direction": "Inbound",
                            "priority": 3930,
                            "protocol": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow fabric ephemeral ports within the vnet"
                    },
                    {
                        "name": "allowSvcFabPortal",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[variables('nt0fabricHttpGatewayPort')]",
                            "direction": "Inbound",
                            "priority": 3900,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow port used to access the fabric cluster web portal"
                    },
                    {
                        "name": "allowSvcFabClient",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[variables('nt0fabricTcpGatewayPort')]",
                            "direction": "Inbound",
                            "priority": 3910,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow port used by the fabric client (includes powershell)"
                    },
                    {
                        "name": "allowSvcFabApplication",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[concat(variables('nt0applicationStartPort'), '-', variables('nt0applicationEndPort'))]",
                            "direction": "Inbound",
                            "priority": 3940,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow fabric application ports within the vnet"
                    },
                    {
                        "name": "blockAll",
                        "properties": {
                            "access": "Deny",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "direction": "Inbound",
                            "priority": 4095,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "block all traffic except what we've explicitly allowed"
                    },
                    {
                        "name": "allowVNetRDP",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389-4500",
                            "direction": "Inbound",
                            "priority": 3960,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow RDP within the net"
                    },
                    {
                        "name": "allowAppPort0",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "80",
                            "direction": "Inbound",
                            "priority": 2001,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow public application port 0"
                    },
                    {
                        "name": "allowAppPort1",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "83",
                            "direction": "Inbound",
                            "priority": 2002,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow public application port 1"
                    },
                    {
                        "name": "allowAppPort2",
                        "properties": {
                            "access": "Allow",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443",
                            "direction": "Inbound",
                            "priority": 2003,
                            "protocol": "*",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        },
                        "comments": "allow public application port 2"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "[variables('vmssApiVersion')]",
            "name": "[variables('vmNodeType0Name')]",
            "location": "[variables('computeLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/loadBalancers/', concat('LB','-', parameters('clusterName'),'-',variables('vmNodeType0Name')))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('applicationDiagnosticsStorageAccountName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            },
            "sku": {
                "name": "[variables('vmNodeType0Size')]",
                "capacity": "[parameters('nt0InstanceCount')]",
                "tier": "Standard"
            },
            "properties": {
                "overprovision": "[variables('overProvision')]",
                "singlePlacementGroup": true,
                "upgradePolicy": {
                    "mode": "Automatic"
                },
                "virtualMachineProfile": {
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "[concat('ServiceFabricNodeVmExt','_vmNodeType0Name')]",
                                "properties": {
                                    "type": "ServiceFabricNode",
                                    "autoUpgradeMinorVersion": true,
                                    "protectedSettings": {
                                        "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-05-01-preview').key1]",
                                        "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-05-01-preview').key2]"
                                    },
                                    "publisher": "Microsoft.Azure.ServiceFabric",
                                    "settings": {
                                        "clusterEndpoint": "[reference(parameters('clusterName')).clusterEndpoint]",
                                        "nodeTypeRef": "[variables('vmNodeType0Name')]",
                                        "dataPath": "[parameters('svcFabData')]",
                                        "durabilityLevel": "[parameters('durabilityLevel')]",
                                        "enableParallelJobs": true,
                                        "nicPrefixOverride": "[variables('subnet0Prefix')]",
                                        "certificate": {
                                            "thumbprint": "[parameters('certificateThumbprint')]",
                                            "x509StoreName": "[parameters('certificateStoreValue')]"
                                        }
                                    },
                                    "typeHandlerVersion": "1.1"
                                }
                            },
                            {
                                "name": "[concat('VMDiagnosticsVmExt','_vmNodeType0Name')]",
                                "properties": {
                                    "type": "IaaSDiagnostics",
                                    "autoUpgradeMinorVersion": true,
                                    "protectedSettings": {
                                        "storageAccountName": "[variables('applicationDiagnosticsStorageAccountName')]",
                                        "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationDiagnosticsStorageAccountName')),'2015-05-01-preview').key1]",
                                        "storageAccountEndPoint": "https://core.windows.net/"
                                    },
                                    "publisher": "Microsoft.Azure.Diagnostics",
                                    "settings": {
                                        "WadCfg": {
                                            "DiagnosticMonitorConfiguration": {
                                                "overallQuotaInMB": "50000",
                                                "EtwProviders": {
                                                    "EtwEventSourceProviderConfiguration": [
                                                        {
                                                            "provider": "Microsoft-ServiceFabric-Actors",
                                                            "scheduledTransferKeywordFilter": "1",
                                                            "scheduledTransferPeriod": "PT5M",
                                                            "DefaultEvents": {
                                                                "eventDestination": "ServiceFabricReliableActorEventTable"
                                                            }
                                                        },
                                                        {
                                                            "provider": "Microsoft-ServiceFabric-Services",
                                                            "scheduledTransferPeriod": "PT5M",
                                                            "DefaultEvents": {
                                                                "eventDestination": "ServiceFabricReliableServiceEventTable"
                                                            }
                                                        }
                                                    ],
                                                    "EtwManifestProviderConfiguration": [
                                                        {
                                                            "provider": "cbd93bc2-71e5-4566-b3a7-595d8eeca6e8",
                                                            "scheduledTransferLogLevelFilter": "Information",
                                                            "scheduledTransferKeywordFilter": "4611686018427387904",
                                                            "scheduledTransferPeriod": "PT5M",
                                                            "DefaultEvents": {
                                                                "eventDestination": "ServiceFabricSystemEventTable"
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "StorageAccount": "[variables('applicationDiagnosticsStorageAccountName')]"
                                    },
                                    "typeHandlerVersion": "1.5"
                                }
                            },
                            {
                                "name": "[concat('VMIaaSAntimalware','_vmNodeType0Name')]",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Security",
                                    "type": "IaaSAntimalware",
                                    "typeHandlerVersion": "1.5",
                                    "settings": {
                                        "AntimalwareEnabled": "true",
                                        "Exclusions": {
                                            "Paths": "[concat(parameters('svcFabData'), ';', parameters('svcFabLogs'), ';', parameters('svcFabRuntime'))]",
                                            "Processes": "Fabric.exe;FabricHost.exe;FabricInstallerService.exe;FabricSetup.exe;FabricDeployer.exe;ImageBuilder.exe;FabricGateway.exe;FabricDCA.exe;FabricFAS.exe;FabricUOS.exe;FabricRM.exe;FileStoreService.exe"
                                        },
                                        "RealtimeProtectionEnabled": "true",
                                        "ScheduledScanSettings": {
                                            "isEnabled": "true",
                                            "scanType": "Quick",
                                            "day": "7",
                                            "time": "120"
                                        }
                                    },
                                    "protectedSettings": null
                                }
                            }
                        ]
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(variables('nicName'), '-0')]",
                                "properties": {
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(variables('nicName'),'-',0)]",
                                            "properties": {
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[variables('lbPoolID0')]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[variables('lbNatPoolID0')]"
                                                    }
                                                ],
                                                "subnet": {
                                                    "id": "[variables('subnet0Ref')]"
                                                }
                                            }
                                        }
                                    ],
                                    "primary": true
                                }
                            }
                        ]
                    },
                    "osProfile": {
                        "adminPassword": "[parameters('adminPassword')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "computernamePrefix": "[variables('vmNodeType0Name')]",
                        "secrets": [
                            {
                                "sourceVault": {
                                    "id": "[parameters('sourceVaultValue')]"
                                },
                                "vaultCertificates": [
                                    {
                                        "certificateStore": "[parameters('certificateStoreValue')]",
                                        "certificateUrl": "[parameters('certificateUrlValue')]"
                                    }
                                ]
                            }
                        ]
                    },
                    "storageProfile": {
                        "imageReference": {
                            "publisher": "[parameters('vmImagePublisher')]",
                            "offer": "[parameters('vmImageOffer')]",
                            "sku": "[parameters('vmImageSku')]",
                            "version": "[parameters('vmImageVersion')]"
                        },
                        "osDisk": {
                            "caching": "ReadOnly",
                            "createOption": "FromImage",
                            "managedDisk": {
                                "storageAccountType": "[parameters('storageAccountType')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.ServiceFabric/clusters",
            "apiVersion": "[variables('sfrpApiVersion')]",
            "name": "[parameters('clusterName')]",
            "location": "[parameters('clusterLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName'))]"
            ],
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            },
            "properties": {
                "addonFeatures": [
                    "DnsService",
                    "RepairManager"
                ],
                "certificate": {
                    "thumbprint": "[parameters('certificateThumbprint')]",
                    "x509StoreName": "[parameters('certificateStoreValue')]"
                },
                "clusterState": "Default",
                "diagnosticsStorageAccountConfig": {
                    "blobEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), variables('storageApiVersion')).primaryEndpoints.blob]",
                    "protectedAccountKeyName": "StorageAccountKey1",
                    "queueEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), variables('storageApiVersion')).primaryEndpoints.queue]",
                    "storageAccountName": "[variables('supportLogStorageAccountName')]",
                    "tableEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), variables('storageApiVersion')).primaryEndpoints.table]"
                },
                "fabricSettings": [
                    {
                        "parameters": [
                            {
                                "name": "ClusterProtectionLevel",
                                "value": "[parameters('clusterProtectionLevel')]"
                            }
                        ],
                        "name": "Security"
                    }
                ],
                "managementEndpoint": "[concat('https://',reference(concat(variables('lbIPName'),'-','0')).dnsSettings.fqdn,':',variables('nt0fabricHttpGatewayPort'))]",
                "nodeTypes": [
                    {
                        "name": "[variables('vmNodeType0Name')]",
                        "applicationPorts": {
                            "endPort": "[variables('nt0applicationEndPort')]",
                            "startPort": "[variables('nt0applicationStartPort')]"
                        },
                        "clientConnectionEndpointPort": "[variables('nt0fabricTcpGatewayPort')]",
                        "durabilityLevel": "[parameters('durabilityLevel')]",
                        "ephemeralPorts": {
                            "endPort": "[variables('nt0ephemeralEndPort')]",
                            "startPort": "[variables('nt0ephemeralStartPort')]"
                        },
                        "httpGatewayEndpointPort": "[variables('nt0fabricHttpGatewayPort')]",
                        "isPrimary": true,
                        "reverseProxyEndpointPort": "[parameters('sfReverseProxyPort')]",
                        "vmInstanceCount": "[parameters('nt0InstanceCount')]"
                    }
                ],
                "provisioningState": "Default",
                "reliabilityLevel": "[parameters('reliabilityLevel')]",
                "upgradeMode": "Automatic",
                "vmImage": "Windows"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/accessPolicies",
            "apiVersion": "2018-02-14",
            "name": "[concat(parameters('keyVaultName'), '/add')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('vmNodeType0Name'))]"
            ],
            "properties": {
                "accessPolicies": [
                    {
                        "name": "variables('vmNodeType0Name')",
                        "tenantId": "[reference(resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmNodeType0Name')), variables('vmssApiVersion'), 'Full').identity.tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmNodeType0Name')), variables('vmssApiVersion'), 'Full').identity.principalId]",
                        "permissions": {
                            "secrets": [
                                "get",
                                "list"
                            ],
                            "certificates": [
                                "get",
                                "list"
                            ]
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "clusterProperties": {
            "type": "Object",
            "value": "[reference(parameters('clusterName'))]"
        }
    }
}